{
  "kind": "collectionType",
  "collectionName": "departments",
  "info": {
    "singularName": "department",
    "pluralName": "departments",
    "displayName": "~S: Кафедры",
    "description": ""
  },
  "options": {
    "draftAndPublish": true
  },
  "pluginOptions": {
    "i18n": {
      "localized": true
    }
  },
  "attributes": {
    "title": {
      "pluginOptions": {
        "i18n": {
          "localized": true
        }
      },
      "type": "string",
      "required": true,
      "maxLength": 255
    },
    "slug": {
      "pluginOptions": {
        "i18n": {
          "localized": true
        }
      },
      "type": "uid",
      "targetField": "title",
      "required": true
    },
    "image": {
      "type": "media",
      "multiple": false,
      "required": false,
      "allowedTypes": [
        "images"
      ],
      "pluginOptions": {
        "i18n": {
          "localized": false
        }
      }
    },
    "url": {
      "pluginOptions": {
        "i18n": {
          "localized": false
        }
      },
      "type": "text",
      "regex": "^https?:\\/\\/(?:www\\.)?[-a-zA-Z0-9@:%.,_\\+~#=]{1,256}(?:.[a-zA-Z0-9()]{1,6})\\b(?:[-a-zA-Z0-9()@:%_\\+.,~#?&\\/=]*)$"
    },
    "email": {
      "pluginOptions": {
        "i18n": {
          "localized": false
        }
      },
      "type": "email"
    },
    "phone": {
      "pluginOptions": {
        "i18n": {
          "localized": false
        }
      },
      "type": "string",
      "maxLength": 255
    },
    "location": {
      "pluginOptions": {
        "i18n": {
          "localized": true
        }
      },
      "type": "string",
      "maxLength": 255
    },
    "order": {
      "pluginOptions": {
        "i18n": {
          "localized": false
        }
      },
      "type": "integer"
    },
    "educationalPrograms": {
      "type": "relation",
      "relation": "oneToMany",
      "target": "api::educational-program.educational-program",
      "mappedBy": "department"
    },
    "head": {
      "type": "relation",
      "relation": "oneToOne",
      "target": "api::employee.employee",
      "inversedBy": "head_in_department"
    },
    "employees": {
      "type": "relation",
      "relation": "manyToMany",
      "target": "api::employee.employee",
      "inversedBy": "departments"
    }
  }
}
